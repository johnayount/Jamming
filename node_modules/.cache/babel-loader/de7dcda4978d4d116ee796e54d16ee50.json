{"ast":null,"code":"const clientId = '3f8581efcf054bc186cdc88d963edde3';\nconst redirectUri = 'http://localhost:3000/';\nlet accessToken;\nconst Spotify = {\n  getAccessToken() {\n    if (accessToken) {\n      return accessToken;\n    } // check for access token\n\n\n    const accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\n    const expiresInMatch = window.location.href.match(/expires_in=([^&]*)/);\n\n    if (accessTokenMatch && expiresInMatch) {\n      accessToken = accessTokenMatch[1];\n      const expiresIn = Number(expiresInMatch[1]);\n      window.setTimeout(() => accessToken = '', expiresIn * 1000);\n      window.history.pushState('Access Token', null, '/');\n      return accessToken;\n    } else {\n      const accessUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=\n            token&scope=playlist-modify-public&redirect_uri=${redirectUri}`;\n      window.location = accessUrl;\n    }\n  },\n\n  async search(term) {\n    const accessToken = Spotify.getAccessToken();\n    const response = await fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\n      headers: {\n        Authorization: `Bearer {accessToken}`\n      }\n    });\n    const jsonResponse = await response.json();\n\n    if (!jsonResponse.tracks) {\n      return [];\n    }\n\n    return jsonResponse.tracks.items.map(track => ({\n      id: track.id,\n      name: track.name,\n      artist: track.artists[0].name,\n      album: track.album.name,\n      uri: track.uri\n    }));\n  },\n\n  savePlaylist(name, trackUris) {\n    if (!name || !trackUris) {\n      return;\n    }\n\n    const accessToken = Spotify.getAccessToken();\n    const headers = {\n      Authorization: `Bearer ${accessToken}`\n    };\n    let userId;\n    return fetch('https://api.spotify.com/v1/me', {\n      headers: headers\n    }).then(response => response.json()).then(jsonResponse => {\n      userId = jsonResponse.id;\n      return fetch(`https://api.spotify.com/1/users/${userId}/playlists`, {\n        headers: headers,\n        method: 'POST',\n        body: JSON.stringify({\n          name: name\n        })\n      }).then(response => response.json()).then(jsonResponse => {\n        const playlistId = jsonResponse.id;\n        return fetch(`https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`, {\n          headers: headers,\n          method: 'POST',\n          body: JSON.stringify({\n            uris: trackUris\n          })\n        });\n      });\n    });\n  }\n\n};\nexport default Spotify;","map":{"version":3,"names":["clientId","redirectUri","accessToken","Spotify","getAccessToken","accessTokenMatch","window","location","href","match","expiresInMatch","expiresIn","Number","setTimeout","history","pushState","accessUrl","search","term","response","fetch","headers","Authorization","jsonResponse","json","tracks","items","map","track","id","name","artist","artists","album","uri","savePlaylist","trackUris","userId","then","method","body","JSON","stringify","playlistId","uris"],"sources":["/Users/johnyount/Desktop/coding-projects/jamming/src/util/Spotify.js"],"sourcesContent":["const clientId = '3f8581efcf054bc186cdc88d963edde3'\nconst redirectUri = 'http://localhost:3000/'\nlet accessToken;\n\n\nconst Spotify = {\n    \n    getAccessToken(){\n        if(accessToken){\n            return accessToken;\n        }\n\n        // check for access token\n        const accessTokenMatch= window.location.href.match(/access_token=([^&]*)/);\n        const expiresInMatch= window.location.href.match(/expires_in=([^&]*)/);\n\n        if(accessTokenMatch && expiresInMatch){\n            accessToken = accessTokenMatch[1];\n            const expiresIn = Number(expiresInMatch[1]);\n            \n            window.setTimeout(() => accessToken = '', expiresIn * 1000);\nwindow.history.pushState('Access Token', null, '/');\n                return accessToken;\n        } else {\n            const accessUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=\n            token&scope=playlist-modify-public&redirect_uri=${redirectUri}`;\n            window.location = accessUrl;\n        }\n    },\n    async search (term){\n        const accessToken = Spotify.getAccessToken();\n        const response = await fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\n            headers: {\n                Authorization: `Bearer {accessToken}`\n            }\n        });\n        const jsonResponse = await response.json();\n        if (!jsonResponse.tracks) {\n            return [];\n        }\n        return jsonResponse.tracks.items.map(track => ({\n            id: track.id,\n            name: track.name,\n            artist: track.artists[0].name,\n            album: track.album.name,\n            uri: track.uri\n        }));\n\n    },\n    savePlaylist(name, trackUris) {\n        if(!name || !trackUris){\n            return;\n        }\n        const accessToken = Spotify.getAccessToken();\n        const headers = {Authorization: `Bearer ${accessToken}`};\n        let userId;\n\n        return fetch('https://api.spotify.com/v1/me',{headers: headers}\n        ).then(response => response.json()\n        ).then(jsonResponse => {\n            userId=jsonResponse.id;\n            return fetch(`https://api.spotify.com/1/users/${userId}/playlists`,\n            {\n                headers: headers,\n                method: 'POST',\n                body: JSON.stringify({ name: name })\n            }).then(response => response.json()\n            ).then(jsonResponse => {\n                const playlistId= jsonResponse.id;\n                return fetch(`https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`,{\n                    headers: headers,\n                    method: 'POST',\n                    body: JSON.stringify({uris: trackUris})\n                }\n                )\n            })\n        })\n    }\n\n    \n\n\n\n}\n\nexport default Spotify;"],"mappings":"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"},"metadata":{},"sourceType":"module"}