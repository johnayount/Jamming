{"ast":null,"code":"const clientId = '3f8581efcf054bc186cdc88d963edde3';\nconst redirectUri = 'http://localhost:3000/';\nlet accessToken;\nconst Spotify = {\n  getAccessToken() {\n    if (accessToken) {\n      return accessToken;\n    } // check for access token\n\n\n    const accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\n    const expiresInMatch = window.location.href.match(/expires_in=([^&]*)/);\n\n    if (accessTokenMatch && expiresInMatch) {\n      accessToken = accessTokenMatch[1];\n      const expiresIn = Number(expiresInMatch[1]);\n      window.setTimeout(() => accessToken = '', expiresIn * 1000);\n      window.history.pushState('Access Token', null, '/');\n      return accessToken;\n    } else {\n      const accessUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=\n            token&scope=playlist-modify-public&redirect_uri=${redirectUri}`;\n      window.location = accessUrl;\n    }\n  },\n\n  search(term) {\n    const accessToken = Spotify.getAccessToken();\n    return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\n      headers: {\n        Authorization: `Bearer {accessToken}`\n      }\n    }).then(response => {\n      return response.json();\n    }).then(jsonResponse => {\n      if (!jsonResponse.tracks) {\n        return [];\n      }\n\n      return jsonResponse.tracks.items.map(track => ({\n        id: track.id,\n        name: track.name,\n        artist: track.artists[0].name,\n        album: track.album.name,\n        uri: track.uri\n      }));\n    });\n  },\n\n  savePlaylist(name, trackUris) {}\n\n};\nexport default Spotify;","map":{"version":3,"names":["clientId","redirectUri","accessToken","Spotify","getAccessToken","accessTokenMatch","window","location","href","match","expiresInMatch","expiresIn","Number","setTimeout","history","pushState","accessUrl","search","term","fetch","headers","Authorization","then","response","json","jsonResponse","tracks","items","map","track","id","name","artist","artists","album","uri","savePlaylist","trackUris"],"sources":["/Users/johnyount/Desktop/coding-projects/jamming/src/util/Spotify.js"],"sourcesContent":["const clientId = '3f8581efcf054bc186cdc88d963edde3'\nconst redirectUri = 'http://localhost:3000/'\nlet accessToken;\n\n\nconst Spotify = {\n    \n    getAccessToken(){\n        if(accessToken){\n            return accessToken;\n        }\n\n        // check for access token\n        const accessTokenMatch= window.location.href.match(/access_token=([^&]*)/);\n        const expiresInMatch= window.location.href.match(/expires_in=([^&]*)/);\n\n        if(accessTokenMatch && expiresInMatch){\n            accessToken = accessTokenMatch[1];\n            const expiresIn = Number(expiresInMatch[1]);\n            \n            window.setTimeout(() => accessToken = '', expiresIn * 1000);\nwindow.history.pushState('Access Token', null, '/');\n                return accessToken;\n        } else {\n            const accessUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=\n            token&scope=playlist-modify-public&redirect_uri=${redirectUri}`;\n            window.location = accessUrl;\n        }\n    },\n    search (term){\n        const accessToken = Spotify.getAccessToken();\n        return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\n            headers: {\n                Authorization: `Bearer {accessToken}`\n            }\n        }).then(response => {\n            return response.json();\n        }).then(jsonResponse=> {\n            if(!jsonResponse.tracks)  {\n                return [];\n            }\n            return jsonResponse.tracks.items.map(track => ({\n                id: track.id,\n                name: track.name,\n                artist: track.artists[0].name,\n                album:track.album.name,\n                uri:track.uri\n            }));\n        \n        });\n\n    },\n    savePlaylist(name, trackUris) {}\n\n    \n\n\n\n}\n\nexport default Spotify;"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,kCAAjB;AACA,MAAMC,WAAW,GAAG,wBAApB;AACA,IAAIC,WAAJ;AAGA,MAAMC,OAAO,GAAG;EAEZC,cAAc,GAAE;IACZ,IAAGF,WAAH,EAAe;MACX,OAAOA,WAAP;IACH,CAHW,CAKZ;;;IACA,MAAMG,gBAAgB,GAAEC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,sBAA3B,CAAxB;IACA,MAAMC,cAAc,GAAEJ,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,oBAA3B,CAAtB;;IAEA,IAAGJ,gBAAgB,IAAIK,cAAvB,EAAsC;MAClCR,WAAW,GAAGG,gBAAgB,CAAC,CAAD,CAA9B;MACA,MAAMM,SAAS,GAAGC,MAAM,CAACF,cAAc,CAAC,CAAD,CAAf,CAAxB;MAEAJ,MAAM,CAACO,UAAP,CAAkB,MAAMX,WAAW,GAAG,EAAtC,EAA0CS,SAAS,GAAG,IAAtD;MACZL,MAAM,CAACQ,OAAP,CAAeC,SAAf,CAAyB,cAAzB,EAAyC,IAAzC,EAA+C,GAA/C;MACgB,OAAOb,WAAP;IACP,CAPD,MAOO;MACH,MAAMc,SAAS,GAAI,oDAAmDhB,QAAS;AAC3F,8DAA8DC,WAAY,EAD9D;MAEAK,MAAM,CAACC,QAAP,GAAkBS,SAAlB;IACH;EACJ,CAvBW;;EAwBZC,MAAM,CAAEC,IAAF,EAAO;IACT,MAAMhB,WAAW,GAAGC,OAAO,CAACC,cAAR,EAApB;IACA,OAAOe,KAAK,CAAE,kDAAiDD,IAAK,EAAxD,EAA2D;MACnEE,OAAO,EAAE;QACLC,aAAa,EAAG;MADX;IAD0D,CAA3D,CAAL,CAIJC,IAJI,CAICC,QAAQ,IAAI;MAChB,OAAOA,QAAQ,CAACC,IAAT,EAAP;IACH,CANM,EAMJF,IANI,CAMCG,YAAY,IAAG;MACnB,IAAG,CAACA,YAAY,CAACC,MAAjB,EAA0B;QACtB,OAAO,EAAP;MACH;;MACD,OAAOD,YAAY,CAACC,MAAb,CAAoBC,KAApB,CAA0BC,GAA1B,CAA8BC,KAAK,KAAK;QAC3CC,EAAE,EAAED,KAAK,CAACC,EADiC;QAE3CC,IAAI,EAAEF,KAAK,CAACE,IAF+B;QAG3CC,MAAM,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd,EAAiBF,IAHkB;QAI3CG,KAAK,EAACL,KAAK,CAACK,KAAN,CAAYH,IAJyB;QAK3CI,GAAG,EAACN,KAAK,CAACM;MALiC,CAAL,CAAnC,CAAP;IAQH,CAlBM,CAAP;EAoBH,CA9CW;;EA+CZC,YAAY,CAACL,IAAD,EAAOM,SAAP,EAAkB,CAAE;;AA/CpB,CAAhB;AAuDA,eAAelC,OAAf"},"metadata":{},"sourceType":"module"}